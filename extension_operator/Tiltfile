"""Configuration for running Datadog Agent locally."""

load("../local_config/Tiltfile", "app_config_path")
load("../tilt_sessions/Tiltfile", "which_sessions", "current_port")


extension_path = os.getcwd()
scripts_path = os.path.join(extension_path, "scripts")

workload_name = "datadog-agent"
button_name = "de-remote:toggle-datadog-agent"


def datadog_up(k8s_resource, labels):
    port = current_port()
    operator_port = which_sessions("uiresource", "extension-operator")

    if not operator_port or port == operator_port:
        extension_operator()
    else:
        # Stub datadog-agent resource (for resource_deps compatibility)
        resource_log_tail(k8s_resource, labels)


def extension_operator():
    script = os.path.join(scripts_path, "cli.py")

    local_resource(
        "extension-operator",
        serve_cmd = ["python", script, "serve"],
        deps = [scripts_path],
        labels = ["tilt"],
    )


def resource_log_tail(k8s_resource, labels):
    local_resource(
        workload_name,
        serve_cmd = [
            "kubectl",
            "logs",
            k8s_resource,
            "--follow=true",
            "--ignore-errors=false",
            "--pod-running-timeout=5m",
        ],
        labels = labels,
        auto_init = False,
    )
