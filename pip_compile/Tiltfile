load("ext://uibutton", "cmd_button")


SCRIPTS = os.path.join(os.getcwd(), "scripts")
DEFAULT_COMPILE_ARGS = ["--allow-unsafe", "--generate-hashes"]


def pip_compile_button(
    image,
    target = "",
    reqs_path = ".",
    compile_args = DEFAULT_COMPILE_ARGS,
):
    """Add `pip-compile` button to all Tilt resources using `image`.

    This button operates very similar to the `cancel` button example in tilt-extensions:
    https://github.com/tilt-dev/tilt-extensions/blob/master/cancel/README.md
    """
    reqs_path = os.path.realpath(reqs_path)
    env_suffix = image.upper().replace("-", "_")

    # Start a controller to watch for image changes and update related resources.

    controller_resource = "pip-compile-controller:%s" % image
    local_resource(
        name = controller_resource,
        serve_cmd = [
            "bash",
            os.path.join(SCRIPTS, "pip-compile-btn-controller.sh"),
            image,
        ],
        serve_env = {
            "PIP_COMPILE_TARGET_%s" % env_suffix: target,
            "PIP_COMPILE_REQSPATH_%s" % env_suffix: reqs_path,
            "PIP_COMPILE_ARGS_%s" % env_suffix: " ".join(compile_args),
        },
        dir = SCRIPTS,
        labels = "support",
    )

    # Make sure the resource is enabled!
    config.define_string_list("args", args=True)
    cfg = config.parse()
    args = cfg.get('args', [])
    args.append(controller_resource)
    config.set_enabled_resources(args)
