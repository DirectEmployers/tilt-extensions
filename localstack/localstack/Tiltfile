load("ext://helm_resource", "helm_repo", "helm_resource")
load("ext://uibutton", "cmd_button")


def tilt_port():
    # Normalize args so that `--port xxx` and `--port=xxx` are both split.
    args = [b for a in sys.argv for b in a.split("=")]

    for i in range(len(args)):
        if "--port" == args[i]:
            return args[i + 1]

    # Return default Tilt port.
    return "10350"

port = tilt_port()

def load_localstack():
    # Pre-create persistent volume claim so Tilt doesn't destroy data.
    k8s_yaml("k8s/pvc-localstack.yaml")
    k8s_resource(
        new_name = "localstack-storage",
        objects = ["localstack:persistentvolumeclaim"],
        labels = "localstack",
        trigger_mode=TRIGGER_MODE_AUTO,
    )

    # Install Localstack from Helm with Tilt-friendly values.yaml.
    helm_repo(
        "localstack-repo",
        "https://helm.localstack.cloud",
        labels = "localstack",
        trigger_mode=TRIGGER_MODE_AUTO,
    )
    helm_resource(
        "localstack",
        "localstack-repo/localstack",
        resource_deps = [
            "localstack-repo",
            "localstack-storage"
        ],
        flags = ["--values", "./values.yaml"],
        labels = "localstack",
    )

    # UI Buttons
    reset_script = os.path.join(os.getcwd(), "scripts/reset.sh")
    cmd_button(
        "localstack:reset",
        argv = ["sh", reset_script, port],
        resource="localstack",
        icon_name = "restart_alt",
        text = "Reset Localstack",
        requires_confirmation = True,
    )

    toggle_script = os.path.join(os.getcwd(), "scripts/toggle.sh")
    icon = "cloud" if "localstack" in sys.argv or not sys.argv[2:] else "cloud_off"
    cmd_button(
        "localstack:toggle",
        argv = ["sh", toggle_script, port],
        location = "nav",
        icon_name = icon,
        text = "Toggle Localstack",
    )


load_localstack()
